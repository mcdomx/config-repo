properties.file: default
app.info: default

#spring.thymeleaf.cache: false
management.security.enabled: false
#spring.h2.console.enabled: true

# Logging
logging.level:
  org.springframework.web: INFO
  org.hibernate: ERROR
  com.netflix: INFO
  com.mcdonald: DEBUG

security:
  oauth2:
    resource:
      userInfoUri: http://authenticationservice:8901/auth/user

spring:
  zipkin:
    base-url: http://zipkin:9411    
  sleuth:
    sampler:
      probability: 1
  cloud:
    stream:
      bindings:
        output:
          destination:  orgChangeTopic
          content-type: application/json
      kafka:
        binder:
          brokers: kafkaserver

#          zkNodes: 192.168.65.0

#spring:
#  kafka:
#    producer:
#      bootstrap-servers: 192.168.65.0
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer


# Datasource ()
example.property: "This is from DEFAULT"
spring.jpa.database: "POSTGRESQL"
spring.datasource.platform: "postgres"
spring.jpa.show-sql: "true"
spring.jpa.hibernate.ddl-auto: none
spring.datasource.continue-on-error: true
spring.datasource.driver-class-name: "org.postgresql.Driver"
spring.datasource.url: "jdbc:postgresql://org_database:5432/orgs_local"
spring.datasource.username: "postgres"
spring.datasource.password: "{cipher}4d0105c0eea6dceecda90d0da20b04a03560308af37b8473730e0092bac74688"

spring.datasource.testWhileIdle: "true"
spring.datasource.validationQuery: "SELECT 1"
spring.jpa.properties.hibernate.dialect: "org.hibernate.dialect.PostgreSQLDialect"

# this will ensure that schema.sql is executed for each instance loaded
spring.datasource.initialization-mode: always
# These aren't needed and I don't know what they do
# spring.datasource.initialize: true
# spring.datasource.schema: classpath:/schema.sql
